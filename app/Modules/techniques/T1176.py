def get_content():
    return {
        "id": "T1176",  # Tactic Technique ID
        "url_id": "1176",  # URL segment for technique reference
        "title": "Browser Extensions",  # Name of the attack technique
        "description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access. Malicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners. Depending on the browser, adversaries may also manipulate an extension's update URL to install updates from an adversary-controlled server or manipulate the mobile configuration file to silently install additional extensions. Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence. There have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for Command and Control. Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for Defense Evasion.",  
        "tags": [],  
        "tactic": "Persistence",  
        "protocol": "Linux, Windows, macOS",  
        "os": "Linux, Windows, macOS",  
        "tips": [
            "Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions.",
            "Process and network monitoring can be used to detect browsers communicating with a C2 server.",
            "Monitor for any new items written to the Registry or PE files written to disk that may correlate with browser extension installation.",
            "On macOS, monitor the command line for usage of the profiles tool, such as `profiles install -type=configuration`.",
            "Ensure all installed extensions in `/Library/Managed Preferences/username/` align with approved extensions."
        ],  
        "data_sources": "Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation, Windows Registry: Windows Registry Key Creation",  
        "log_sources": [  
            {"type": "Browser Logs", "source": "Installed Extensions", "destination": "System Logs"}  
        ],  
        "source_artifacts": [  
            {"type": "Extension File", "location": "~/Library/Application Support/Google/Chrome/Default/Extensions/", "identify": "Installed Chrome Extensions"},  
            {"type": "Registry Key", "location": "HKEY_LOCAL_MACHINE\\Software\\Google\\Chrome\\Extensions", "identify": "Windows Chrome Extension Registry"}  
        ],  
        "destination_artifacts": [  
            {"type": "Log File", "location": "/var/log/system.log", "identify": "Browser Extension Activity Logs"}  
        ],  
        "detection_methods": ["Extension Inventory Monitoring", "Process and Network Activity Analysis"],  
        "apt": ["Kimsuky", "Stolen Pencil", "Shlayer"],  
        "spl_query": ["index=browser_logs | search malicious_extension"],  
        "hunt_steps": ["Check for unauthorized browser extensions.", "Analyze network traffic generated by installed extensions."],  
        "expected_outcomes": ["Detection of unauthorized browser extension activity."],  
        "false_positive": "Legitimate browser extensions may trigger alerts if not whitelisted.",  
        "clearing_steps": ["Remove unauthorized browser extensions manually or through enterprise policies.", "Reset browser profiles to default settings."],  
        "mitre_mapping": [
            {"tactic": "Persistence", "technique": "T1176", "example": "Malicious browser extensions used for credential theft and persistence."}
        ],  
        "watchlist": ["Unusual browser extension installations", "Browser extensions making suspicious network requests"],  
        "enhancements": ["Restrict installation of browser extensions via enterprise policies.", "Implement endpoint detection for unauthorized browser extensions."],  
        "summary": "Malicious browser extensions can be exploited by adversaries to maintain persistence, steal credentials, and establish backdoor access.",  
        "remediation": "Monitor and restrict browser extension installation policies to prevent unauthorized modifications.",  
        "improvements": "Enhance browser security policies to allow only approved extensions and enable strict permissions monitoring."  
    }
